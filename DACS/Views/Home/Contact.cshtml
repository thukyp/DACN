@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="~/css/Introduce.css">
    <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=DM+Sans&amp;display=swap'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css">
    <title>
        Liên hệ
    </title>
    <style>
        :root {
            --primary: #4CAF50;
            --secondary: #8D6E63;
            --light-bg: #F9FBE7;
            --dark-text: #2E2E2E;
            --card-border: #C8E6C9;
        }

        h1 {
            color: var(--primary);
            text-align: center;
            
            margin-bottom: 30px;
        }

        body {
            font-family: 'Outfit', sans-serif;
            background-color: var(--light-bg);
            color: var(--dark-text);
        }

        .container {
            display: grid;
            max-width: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            flex-direction: row;
        }

        .container-contact {
            max-width: 1100px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        

        .contact-wrapper {
            display: flex;
            flex-wrap: wrap;
            gap: 40px;
        }

        .contact-info, .contact-form {
            flex: 1 1 400px;
            background: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

            .contact-info h2, .contact-form h2 {
                margin-bottom: 20px;
                font-size: 22px;
                color: #34495e;
            }

            .contact-info p {
                margin: 10px 0;
                line-height: 1.6;
                color: #555;
            }

            .contact-form input, .contact-form textarea {
                width: 100%;
                padding: 12px 15px;
                margin-bottom: 15px;
                border-radius: 8px;
                border: 1px solid #ccc;
                font-size: 16px;
            }

            .contact-form form textarea {
                resize: vertical;
                min-height: 120px;
            }

            .contact-form button {
                background: #27ae60;
                color: #fff;
                border: none;
                padding: 14px 20px;
                border-radius: 8px;
                font-size: 16px;
                cursor: pointer;
                transition: 0.3s ease;
            }

                .contact-form form button:hover {
                    background: #219150;
                }

        .map {
            margin-top: 40px;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        iframe {
            width: 100%;
            height: 400px;
            border: none;
        }

        /* === CSS MỚI CHO KHUNG LIVE CHAT === */
        #chat-messages-container {
            height: 250px; /* Chiều cao cố định cho khung tin nhắn */
            border: 1px solid #ccc;
            overflow-y: auto;
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 8px;
            background: #f9f9f9;
            display: flex;
            flex-direction: column;
        }

        .chat-message {
            padding: 8px 12px;
            border-radius: 18px;
            margin-bottom: 10px;
            max-width: 80%;
            line-height: 1.4;
            font-size: 15px;
        }

            .chat-message.user {
                /* Dùng màu primary bạn đã định nghĩa */
                background: var(--primary);
                color: white;
                align-self: flex-end; /* Tin nhắn của mình */
            }

            .chat-message.admin {
                background: #eee;
                color: #333;
                align-self: flex-start; /* Tin nhắn của admin */
            }

        /* Ẩn/hiện các khu vực nhập liệu */
        #chat-input-area {
            display: none; /* Ban đầu ẩn đi */
        }
    </style>
</head>
<body>

    <!-- Banner -->
    <div class="container-contact">
        <h1>Liên hệ với chúng tôi</h1>

        <div class="contact-wrapper">
            <div class="contact-info">
                <h2>Thông tin liên hệ</h2>
                <p><strong>Địa chỉ:</strong> Chung cư tara</p>
                <p><strong>Điện thoại:</strong> 0337178338</p>
                <p><strong>Email:</strong> hoahaibakhongchin@gmail.com</p>
            </div>

            <div class="contact-form">
                <h2>Live Chat</h2>

                <div id="chat-messages-container">
                    <div class="chat-message admin">Xin chào! Bạn cần hỗ trợ gì ạ?</div>
                </div>

                <div id="chat-name-area">
                    <input type="text" id="chat-user-name" placeholder="Họ và tên" required>
                    <button type"button" id="chat-start-btn">Bắt đầu chat</button>
                </div>

                <div id="chat-input-area">
                    <textarea id="chat-input" placeholder="Nội dung tin nhắn..." required></textarea>
                    <button type="button" id="chat-send-btn">Gửi</button>
                </div>
            </div>
        </div>

        <div class="map">
            <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3920.0228620243133!2d106.65046155452728!3d10.732719992999037!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752e421ba32545%3A0x8482217e407b119e!2zUE1KMytXRkgsIFBoxrDhu51uZyA2LCBRdeG6rW4gOCwgSOG7kyBDaMOtIE1pbmgsIFZp4buHdCBOYW0!5e0!3m2!1svi!2s!4v1744707048987!5m2!1svi!2s" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
            </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <script type="text/javascript" src="js/script.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {

            // Lấy các phần tử HTML
            const messagesContainer = document.getElementById("chat-messages-container");
            const messageInput = document.getElementById("chat-input");
            const sendButton = document.getElementById("chat-send-btn");
            const nameArea = document.getElementById("chat-name-area");
            const inputArea = document.getElementById("chat-input-area");
            const nameInput = document.getElementById("chat-user-name");
            const startButton = document.getElementById("chat-start-btn");

            let userName = "";

            // 1. Tạo kết nối tới Hub
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub") // Phải trùng với tên Hub bạn đăng ký ở Program.cs
                .build();

            // 2. Bắt đầu chat (sau khi nhập tên)
            startButton.addEventListener("click", () => {
                userName = nameInput.value.trim();
                if (userName) {
                    nameArea.style.display = "none";    // Ẩn khung nhập tên
                    inputArea.style.display = "block";  // Hiện khung nhập tin nhắn
                    messageInput.focus();
                }
            });

            // 3. Hàm GỬI tin nhắn (gọi hàm "SendMessageToAdmin" trên Hub)
            function sendMessage() {
                const message = messageInput.value.trim();
                if (message && userName) {
                    // Gửi tin nhắn LÊN server (Hub)
                    connection.invoke("SendMessageToAdmin", userName, message).catch(err => console.error(err.toString()));

                    // Hiển thị tin nhắn của chính mình (user)
                    addMessageToBox(message, "user");

                    messageInput.value = "";
                    messageInput.focus();
                }
            }

            // Gửi khi nhấn nút
            sendButton.addEventListener("click", sendMessage);
            // Gửi khi nhấn Enter (trong textarea thì dùng Ctrl+Enter hoặc tùy chỉnh)
            messageInput.addEventListener("keypress", function (e) {
                if (e.key === "Enter" && !e.shiftKey) { // Gửi khi nhấn Enter (không phải Shift+Enter)
                    e.preventDefault(); // Ngăn xuống dòng
                    sendMessage();
                }
            });

            // 4. Hàm NHẬN tin nhắn (lắng nghe sự kiện "ReceiveAdminReply" từ Hub)
            connection.on("ReceiveAdminReply", (message) => {
                // Hiển thị tin nhắn của admin
                addMessageToBox(message, "admin");
            });

            // Hàm tiện ích để thêm tin nhắn vào khung chat
            function addMessageToBox(message, type) {
                const msgDiv = document.createElement("div");
                msgDiv.className = `chat-message ${type}`; // "user" hoặc "admin"
                msgDiv.textContent = message;
                messagesContainer.appendChild(msgDiv);
                // Cuộn xuống tin nhắn mới nhất
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }

            // 5. Bắt đầu kết nối
            connection.start().catch(err => console.error(err.toString()));
        });
    </script>
</body>
</html>
