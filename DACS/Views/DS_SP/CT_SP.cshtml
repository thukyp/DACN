@model DACS.Models.SanPham
@{
    // 1. KHAI BÁO BIẾN Ở ĐÂY
    ViewData["Title"] = $"Chi tiết: {Model.TenSanPham}";
    var soLuongTonKho = ViewData["SoLuongTonKho"] as float? ?? 0;
    var isFavorite = (bool)(ViewData["IsFavorite"] ?? false);
    string heartIconClass = isFavorite ? "fa-solid fa-heart text-danger" : "fa-regular fa-heart";
    var relatedProducts = ViewData["RelatedProducts"] as List<DACS.Models.SanPham> ?? new List<DACS.Models.SanPham>();
    var reviewMessage = TempData["ReviewMessage"] as string;
    var currentUserMKhachHang = ViewData["CurrentUser_M_KhachHang"] as string;
    // (Thêm các biến khác nếu cần)
}

<div class="container mt-5 mb-5">
    @if (!string.IsNullOrEmpty(reviewMessage))
    {
        <div class="alert @(reviewMessage.StartsWith("Lỗi") || reviewMessage.StartsWith("Thông báo:") ? "alert-warning" : "alert-success")" role="alert">
            @reviewMessage
        </div>
    }
    <div class="row">
        <div class="col-lg-6 mb-4 mb-lg-0">
            <div class="product-image-main text-center mb-3">
                <img src="@Url.Content(Model.AnhSanPham ?? "~/images/placeholder.png")" alt="@Model.TenSanPham" id="mainProductImage" style="max-width: 100%; height: auto; object-fit: contain; max-height: 400px;">
            </div>
            @if (!string.IsNullOrEmpty(Model.AnhSanPham))
            {
                <div class="product-thumbnails d-flex justify-content-center">
                    <img src="@Url.Content(Model.AnhSanPham)" alt="Thumbnail Chính" class="active" style="width: 60px; height: 60px; object-fit: cover; border: 1px solid #ddd; margin-right: 5px; cursor: pointer; border-radius: 3px;">
                </div>
            }
        </div>

        <div class="col-lg-6">
            <h1>@Model.TenSanPham</h1>
            <div class="mb-2 rating-stars" style="color: #ffc107;">
                @{
                    /* Code tính sao trung bình của bạn */
                }
                @for (int i = 1; i <= 5; i++) { /* Code hiển thị sao của bạn */ }
                @if (Model.ChiTietDanhGias.Count > 0) { /* Link xem đánh giá */ } else { /* Text chưa có đánh giá */ }
            </div>
            <p><small class="text-muted">Mã SP: @Model.M_SanPham</small></p>
            <p><small class="text-muted">Loại: @(Model.LoaiSanPham?.TenLoai ?? "N/A") | ĐVT: @(Model.DonViTinh?.TenLoaiTinh ?? "N/A")</small></p>
            <p><small class="text-muted">Hạn sử dụng: @Model.HanSuDung.ToString("dd/MM/yyyy")</small></p>
            <p class="h3 text-danger fw-bold mb-3">Giá: @Model.Gia.ToString("N0")₫</p>
            @if (soLuongTonKho > 0 && Model.TrangThai.Equals("Còn hàng", StringComparison.OrdinalIgnoreCase)) { /* Badge còn hàng */ } else { /* Badge hết hàng */ }
            @if (!string.IsNullOrEmpty(Model.MoTa)) { /* Code hiển thị mô tả ngắn */ }

            <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
                <input type="hidden" name="productId" value="@Model.M_SanPham" />
                <div class="d-flex align-items-center mb-4">
                    <label class="form-label me-3 mb-0">Khối lượng: 1kg</label>
                    <button type="button" id="btnWishlist" class="btn btn-outline-danger ms-3" data-id="@Model.M_SanPham" title="Thêm/Xóa yêu thích">
                        <i id="wishlistIcon" class="fa @heartIconClass"></i>
                    </button>
                </div>
                <div class="d-grid gap-2 d-sm-flex">
                    @if (soLuongTonKho > 0 && Model.TrangThai.Equals("Còn hàng", StringComparison.OrdinalIgnoreCase)) { /* Nút thêm vào giỏ */ } else { /* Nút hết hàng */ }
                </div>
            </form>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs" id="productTab" role="tablist">
            </ul>
            <div class="tab-content pt-4" id="productTabContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel">
                    @Html.Raw(Model.MoTa?.Replace("\n", "<br />") ?? "<p>Chưa có mô tả.</p>")
                </div>
                <div class="tab-pane fade" id="reviews" role="tabpanel">
                    <h4>Đánh giá từ khách hàng</h4>
                    <div class="mb-4">
                        @if (Model.ChiTietDanhGias != null && Model.ChiTietDanhGias.Any()) { /* Lặp qua các review */ } else { /* Text chưa có đánh giá */ }
                    </div>
                    <hr class="my-4">
                    <h5>Viết đánh giá của bạn</h5>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <form id="reviewForm" asp-action="SubmitReview" asp-controller="DS_SP" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="M_SanPham" value="@Model.M_SanPham" />
                            <div class="mb-3">
                                <label class="form-label">Mức độ hài lòng</label>
                                <div id="ratingInput" class="rating-stars">
                                    <i class="fa-regular fa-star interactive-star" data-value="1"></i>
                                    <i class="fa-regular fa-star interactive-star" data-value="2"></i>
                                    <i class="fa-regular fa-star interactive-star" data-value="3"></i>
                                    <i class="fa-regular fa-star interactive-star" data-value="4"></i>
                                    <i class="fa-regular fa-star interactive-star" data-value="5"></i>
                                    <input type="hidden" name="MucDoHaiLong" id="ratingValue" value="0" required />
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="reviewComment" class="form-label">Nhận xét</label>
                                <textarea class="form-control" id="reviewComment" name="MoTa_DanhGia" rows="3" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
                        </form>
                    }
                    else { /* Link đăng nhập */ }
                </div>
            </div>
        </div>
    </div>

    @if (relatedProducts.Any())
    {
        <div class="row mt-5">
            <div class="col-12"><h3 class="mb-4">Sản phẩm bạn có thể thích</h3></div>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
                @foreach (var relatedProd in relatedProducts) { /* Hiển thị card sản phẩm liên quan */ }
            </div>
        </div>
    }
</div>
@section Scripts {
    <script>
        // Dùng $(document).ready() của jQuery cho toàn bộ script của trang này
        $(document).ready(function () {

            // --- 1. LOGIC XỬ LÝ NÚT YÊU THÍCH ---
            var antiForgeryToken = $('#reviewForm').find('input[name="__RequestVerificationToken"]').val();
            var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();

            $('#btnWishlist').click(function () {
                var button = $(this);
                var icon = $('#wishlistIcon');
                var productId = button.data('id');

                if (isAuthenticated === 'true' && !antiForgeryToken) {
                    alert("Lỗi: Token xác thực bị thiếu. Vui lòng tải lại trang.");
                    return;
                }

                button.prop('disabled', true);

                $.post('/DS_SP/ToggleWishlist', { m_SanPham: productId, __RequestVerificationToken: antiForgeryToken })
                    .done(function (res) {
                        if (res.success) {
                            // Gọi hàm từ _Layout.cshtml
                            if (typeof loadWishlistMini === 'function') {
                                loadWishlistMini();
                            } else {
                                console.error("Lỗi: Hàm loadWishlistMini() không tồn tại.");
                            }
                            // Cập nhật icon
                            if (res.isFavorite) {
                                icon.removeClass('fa-regular').addClass('fa-solid text-danger');
                            } else {
                                icon.removeClass('fa-solid text-danger').addClass('fa-regular');
                            }
                        } else {
                            alert(res.message);
                        }
                    })
                    .fail(function () {
                        alert("Lỗi kết nối. Vui lòng thử lại.");
                    })
                    .always(function () {
                        button.prop('disabled', false); // Luôn kích hoạt lại nút
                    });
            });

            // --- 2. LOGIC SAO ĐÁNH GIÁ ---
            const ratingStarsInteractive = document.querySelectorAll('#ratingInput .interactive-star');
            const ratingValueInput = document.getElementById('ratingValue');

            ratingStarsInteractive.forEach(star => {
                 // Gán sự kiện mouseover, mouseout, click cho sao
                 star.addEventListener('click', function () {
                      const selectedValue = this.dataset.value;
                      ratingValueInput.value = selectedValue;
                      // Cập nhật hiển thị sao
                      ratingStarsInteractive.forEach(s => {
                           s.classList.remove('fas', 'fa-solid', 'fa-regular');
                           if (parseInt(s.dataset.value) <= parseInt(selectedValue)) { s.classList.add('fas'); }
                           else { s.classList.add('fa-regular'); }
                      });
                 });
                 // (Thêm lại code mouseover/mouseout nếu bạn muốn)
            });

            // --- 3. LOGIC SỐ LƯỢNG (Nếu có) ---
            // (Code tăng/giảm số lượng của bạn ở đây)

        });
    </script>
}